{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohammad_Hussain\\\\Desktop\\\\samrin-react-prac\\\\my-first-app\\\\src\\\\newFile\\\\Pages\\\\Products\\\\productProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { mockData } from './mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductContext = /*#__PURE__*/createContext();\n\nconst productsReducer = (state, action) => {\n  // console.log(action)\n  // if (action.paylode) {\n  //     const updatedState = { ...state }\n  //     updatedState.productData.products.push(action.paylode)\n  //     console.log('updatedState', updatedState);\n  // }\n  const renderData = (targetSource, data, action) => {\n    if (action.payload) {\n      targetSource.productData.selectedProducts = [...data, action.payload];\n    } else {\n      targetSource.productData.selectedProducts = data;\n    }\n  };\n\n  switch (action.type) {\n    case 'all':\n      const clonedState = { ...state,\n        productData: { ...state.productData,\n          selectedProducts: []\n        }\n      };\n      clonedState.productData.selectedProducts = [...state.productData.products];\n      return clonedState;\n\n    case 'telivision':\n      const tvData = { ...state,\n        productData: { ...state.productData,\n          selectedProducts: []\n        }\n      };\n      const newData = tvData.productData.products.filter(p => p.type === 'telivision');\n      renderData(tvData, newData, action);\n      return tvData;\n\n    case 'mobile':\n      const mobileData = { ...state,\n        productData: { ...state.productData,\n          selectedProducts: []\n        }\n      };\n      const mData = mobileData.productData.products.filter(p => p.type === 'mobile');\n      mobileData.productData.selectedProducts = mData;\n      return mobileData;\n\n    case 'laptop':\n      const laptopData = { ...state,\n        productData: { ...state.productData,\n          selectedProducts: []\n        }\n      };\n      const lData = laptopData.productData.products.filter(p => p.type === 'mobile');\n      renderData(laptopData, lData, action);\n\n    default:\n      return { ...mockData\n      };\n  }\n};\n\nexport const ProductProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(productsReducer, mockData);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductProvider, \"2WFenClE9RRWzCkOtx8lnW6HRug=\");\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"names":["createContext","useReducer","mockData","ProductContext","productsReducer","state","action","renderData","targetSource","data","payload","productData","selectedProducts","type","clonedState","products","tvData","newData","filter","p","mobileData","mData","laptopData","lData","ProductProvider","props","dispatch","children"],"sources":["C:/Users/Mohammad_Hussain/Desktop/samrin-react-prac/my-first-app/src/newFile/Pages/Products/productProvider.js"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport { mockData } from './mockData'\r\n\r\nexport const ProductContext = createContext();\r\n\r\nconst productsReducer = (state, action) => {\r\n    // console.log(action)\r\n    // if (action.paylode) {\r\n    //     const updatedState = { ...state }\r\n    //     updatedState.productData.products.push(action.paylode)\r\n    //     console.log('updatedState', updatedState);\r\n      \r\n    // }\r\n    const renderData = (targetSource, data,  action)=> {\r\n        if(action.payload) {\r\n            targetSource.productData.selectedProducts = [...data, action.payload]\r\n        } else {\r\n            targetSource.productData.selectedProducts = data\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case 'all':\r\n            const clonedState = { ...state, productData: { ...state.productData, selectedProducts: [] } }\r\n            clonedState.productData.selectedProducts = [...state.productData.products]\r\n            return clonedState\r\n        case 'telivision':\r\n            const tvData = { ...state, productData: { ...state.productData, selectedProducts: [] } }\r\n            const newData = tvData.productData.products.filter((p) => p.type === 'telivision')\r\n            renderData(tvData, newData,  action)\r\n           \r\n            return tvData\r\n\r\n        case 'mobile':\r\n            const mobileData = { ...state, productData: { ...state.productData, selectedProducts: [] } }\r\n            const mData = mobileData.productData.products.filter((p) => p.type === 'mobile')\r\n            mobileData.productData.selectedProducts = mData\r\n\r\n            return mobileData\r\n        case 'laptop':\r\n            const laptopData = { ...state, productData: { ...state.productData, selectedProducts: [] } }\r\n            const lData = laptopData.productData.products.filter((p) => p.type === 'mobile')\r\n            renderData(laptopData, lData,  action)\r\n           \r\n        \r\n        default:\r\n            return { ...mockData }\r\n    }\r\n}\r\nexport const ProductProvider = (props) => {\r\n    const [state, dispatch] = useReducer(productsReducer, mockData)\r\n    return (\r\n        <ProductContext.Provider value={{ state, dispatch }}>\r\n            {props.children}\r\n        </ProductContext.Provider>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,OAAO,MAAMC,cAAc,gBAAGH,aAAa,EAApC;;AAEP,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACvC;EACA;EACA;EACA;EACA;EAEA;EACA,MAAMC,UAAU,GAAG,CAACC,YAAD,EAAeC,IAAf,EAAsBH,MAAtB,KAAgC;IAC/C,IAAGA,MAAM,CAACI,OAAV,EAAmB;MACfF,YAAY,CAACG,WAAb,CAAyBC,gBAAzB,GAA4C,CAAC,GAAGH,IAAJ,EAAUH,MAAM,CAACI,OAAjB,CAA5C;IACH,CAFD,MAEO;MACHF,YAAY,CAACG,WAAb,CAAyBC,gBAAzB,GAA4CH,IAA5C;IACH;EACJ,CAND;;EAOA,QAAQH,MAAM,CAACO,IAAf;IACI,KAAK,KAAL;MACI,MAAMC,WAAW,GAAG,EAAE,GAAGT,KAAL;QAAYM,WAAW,EAAE,EAAE,GAAGN,KAAK,CAACM,WAAX;UAAwBC,gBAAgB,EAAE;QAA1C;MAAzB,CAApB;MACAE,WAAW,CAACH,WAAZ,CAAwBC,gBAAxB,GAA2C,CAAC,GAAGP,KAAK,CAACM,WAAN,CAAkBI,QAAtB,CAA3C;MACA,OAAOD,WAAP;;IACJ,KAAK,YAAL;MACI,MAAME,MAAM,GAAG,EAAE,GAAGX,KAAL;QAAYM,WAAW,EAAE,EAAE,GAAGN,KAAK,CAACM,WAAX;UAAwBC,gBAAgB,EAAE;QAA1C;MAAzB,CAAf;MACA,MAAMK,OAAO,GAAGD,MAAM,CAACL,WAAP,CAAmBI,QAAnB,CAA4BG,MAA5B,CAAoCC,CAAD,IAAOA,CAAC,CAACN,IAAF,KAAW,YAArD,CAAhB;MACAN,UAAU,CAACS,MAAD,EAASC,OAAT,EAAmBX,MAAnB,CAAV;MAEA,OAAOU,MAAP;;IAEJ,KAAK,QAAL;MACI,MAAMI,UAAU,GAAG,EAAE,GAAGf,KAAL;QAAYM,WAAW,EAAE,EAAE,GAAGN,KAAK,CAACM,WAAX;UAAwBC,gBAAgB,EAAE;QAA1C;MAAzB,CAAnB;MACA,MAAMS,KAAK,GAAGD,UAAU,CAACT,WAAX,CAAuBI,QAAvB,CAAgCG,MAAhC,CAAwCC,CAAD,IAAOA,CAAC,CAACN,IAAF,KAAW,QAAzD,CAAd;MACAO,UAAU,CAACT,WAAX,CAAuBC,gBAAvB,GAA0CS,KAA1C;MAEA,OAAOD,UAAP;;IACJ,KAAK,QAAL;MACI,MAAME,UAAU,GAAG,EAAE,GAAGjB,KAAL;QAAYM,WAAW,EAAE,EAAE,GAAGN,KAAK,CAACM,WAAX;UAAwBC,gBAAgB,EAAE;QAA1C;MAAzB,CAAnB;MACA,MAAMW,KAAK,GAAGD,UAAU,CAACX,WAAX,CAAuBI,QAAvB,CAAgCG,MAAhC,CAAwCC,CAAD,IAAOA,CAAC,CAACN,IAAF,KAAW,QAAzD,CAAd;MACAN,UAAU,CAACe,UAAD,EAAaC,KAAb,EAAqBjB,MAArB,CAAV;;IAGJ;MACI,OAAO,EAAE,GAAGJ;MAAL,CAAP;EAzBR;AA2BH,CA1CD;;AA2CA,OAAO,MAAMsB,eAAe,GAAIC,KAAD,IAAW;EAAA;;EACtC,MAAM,CAACpB,KAAD,EAAQqB,QAAR,IAAoBzB,UAAU,CAACG,eAAD,EAAkBF,QAAlB,CAApC;EACA,oBACI,QAAC,cAAD,CAAgB,QAAhB;IAAyB,KAAK,EAAE;MAAEG,KAAF;MAASqB;IAAT,CAAhC;IAAA,UACKD,KAAK,CAACE;EADX;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAPM;;GAAMH,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}