{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { configureStore } from \"@reduxjs/toolkit\"; // export const listApi = createApi({\n//     reducerPath: 'listApi',\n//     baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5000/' }),\n//     tagTypes: ['contact'],\n//     endpoints: (builder) => ({\n//         fetchContacts: builder.query({\n//             query: () => 'contact',\n//             providesTags: ['contact'],\n//         }),\n//         deleteList: builder.mutation({\n//             query: (paylode) => {\n//                 return {\n//                     url: `contact/${paylode}`,\n//                     method: \"DELETE\",\n//                 }\n//             },\n//             invalidatesTags: ['contact']\n//         }),\n//         updateList: builder.mutation({\n//             query: (value) => {\n//                 console.log(value);\n//                 return {\n//                     url: `contact/${value.id}`,\n//                     method: \"PUT\",\n//                     body: value\n//                 }\n//             },\n//             invalidatesTags: ['contact']\n//         })\n//     })\n// })\n// export const { useFetchContactsQuery, useDeleteListMutation, useUpdateListMutation } = listApi;\n// export const rtkStoreList = configureStore({\n//     reducer: {\n//         [listApi.reducerPath]: listApi.reducer\n//     },\n//     middleware: (getDefaultMiddleware) => {\n//         return getDefaultMiddleware().concat(listApi.middleware)\n//     }\n// })","map":{"version":3,"names":["createApi","fetchBaseQuery","configureStore"],"sources":["C:/Users/Mohammad_Hussain/Desktop/samrin-react-prac/my-first-app/src/storeRTK/store.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// export const listApi = createApi({\r\n//     reducerPath: 'listApi',\r\n//     baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:5000/' }),\r\n//     tagTypes: ['contact'],\r\n//     endpoints: (builder) => ({\r\n//         fetchContacts: builder.query({\r\n//             query: () => 'contact',\r\n//             providesTags: ['contact'],\r\n//         }),\r\n\r\n//         deleteList: builder.mutation({\r\n//             query: (paylode) => {\r\n//                 return {\r\n//                     url: `contact/${paylode}`,\r\n//                     method: \"DELETE\",\r\n//                 }\r\n//             },\r\n//             invalidatesTags: ['contact']\r\n//         }),\r\n\r\n//         updateList: builder.mutation({\r\n//             query: (value) => {\r\n//                 console.log(value);\r\n//                 return {\r\n//                     url: `contact/${value.id}`,\r\n//                     method: \"PUT\",\r\n//                     body: value\r\n//                 }\r\n//             },\r\n//             invalidatesTags: ['contact']\r\n//         })\r\n\r\n//     })\r\n// })\r\n// export const { useFetchContactsQuery, useDeleteListMutation, useUpdateListMutation } = listApi;\r\n\r\n// export const rtkStoreList = configureStore({\r\n//     reducer: {\r\n//         [listApi.reducerPath]: listApi.reducer\r\n//     },\r\n//     middleware: (getDefaultMiddleware) => {\r\n//         return getDefaultMiddleware().concat(listApi.middleware)\r\n//     }\r\n// })"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}